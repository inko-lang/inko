# Generating of random values such as numbers and bytes.

# Returns a random `Int`.
fn pub int -> Int {
  _INKO.random_int
}

# Returns a random `Float`.
fn pub float -> Float {
  _INKO.random_float
}

# Returns a random `Int` in the given range.
#
# The returned value is in the range `start <= value < stop`. If `start >= stop`
# is true, this method returns `0`.
fn pub int_range(start: Int, stop: Int) -> Int {
  _INKO.random_int_range(start, stop)
}

# Returns a random `Float` in the given range.
#
# The returned value is in the range `start <= value < stop`. If `start >= stop`
# is true, this method returns `0.0`.
fn pub float_range(start: Float, stop: Float) -> Float {
  _INKO.random_float_range(start, stop)
}

# Returns a `ByteArray` containing random bytes.
#
# The returned `ByteArray` will contain exactly `size` bytes.
#
# # Panics
#
# This method might panic if no random bytes could be generated.
fn pub bytes(size: Int) -> ByteArray {
  _INKO.random_bytes(size)
}
