# Traits for the various binary operators.

# The binary `+` operator.
#
# This trait is generic as types may wish to customise the type on the
# right-hand side of the operator.
trait pub Add[T, R] {
  # Adds the given object to `self`.
  fn pub +(other: ref T) -> R
}

# The binary `-` operator.
#
# This trait is generic as types may wish to customise the type on the
# right-hand side of the operator.
trait pub Subtract[T, R] {
  # Subtracts the given object from `self`.
  fn pub -(other: ref T) -> R
}

# The binary `/` operator.
trait pub Divide[T, R] {
  # Divides `self` by the given object.
  fn pub /(other: ref T) -> R
}

# The binary `*` operator.
trait pub Multiply[T, R] {
  # Multiplies `self` with the given object.
  fn pub *(other: ref T) -> R
}

# The binary `%` operator.
trait pub Modulo[T, R] {
  # Gets the remainder after dividing `self` by the given object.
  fn pub %(other: ref T) -> R
}

# The binary `**` operator.
trait pub Power[T, R] {
  # Raises `self` to the power of the given exponent.
  fn pub **(other: ref T) -> R
}

# The binary `&` (bitwise AND) operator.
trait pub BitAnd[T, R] {
  # Returns the result of a bitwise AND with `self` and the given object.
  fn pub &(other: ref T) -> R
}

# The binary `|` (bitwise OR) operator.
trait pub BitOr[T, R] {
  # Returns the result of a bitwise OR with `self` and the given object.
  fn pub |(other: ref T) -> R
}

# The binary `^` operator.
trait pub BitXor[T, R] {
  # Returns the result of a bitwise XOR with `self` and the given object.
  fn pub ^(other: ref T) -> R
}

# The binary `<<` operator.
trait pub ShiftLeft[T, R] {
  # Returns the result of a bitwise shift to the left with `self` and the given
  # object.
  fn pub <<(other: ref T) -> R
}

# The binary `>>` operator.
trait pub ShiftRight[T, R] {
  # Returns the result of a bitwise shift to the right with `self` and the
  # given object.
  fn pub >>(other: ref T) -> R
}

# The binary `>>>` operator.
trait pub UnsignedShiftRight[T, R] {
  # Casts `self` to an unsigned integer, shifts it to the right, then returns
  # the result as a signed integer.
  fn pub >>>(other: ref T) -> R
}
