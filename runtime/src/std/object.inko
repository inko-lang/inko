# Functionality available to all objects.
#
# All objects in Inko are an instance of `Object`, and thus all its methods are
# available to all objects.
import std::conditional::Conditional
import std::operators::Equal

impl Conditional for Object {
  def if!(R)(true: do -> R, false: do -> R) -> R {
    true.call
  }
}

impl Equal for Object {
  def ==(other: Self) -> Boolean {
    equal?(other)
  }
}

impl Object {
  # Returns `True` if `self` is `Nil`.`
  #
  # # Examples
  #
  # Checking if an object is `Nil`:
  #
  #     10.nil?  # => False
  #     Nil.nil? # => True
  def nil? -> Boolean {
    _INKOC.object_equals(self, Nil)
  }

  # Returns `True` if `self` is any object other than `Nil`.
  #
  # # Examples
  #
  # Checking if an object is not `Nil`:
  #
  #     10.not_nil?  # => True
  #     Nil.not_nil? # => False
  def not_nil? -> Boolean {
    _INKOC.object_equals(nil?, False)
  }
}
